/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GAMESCREENVIEWBASE_HPP
#define GAMESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/gamescreen_screen/GameScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <gui/containers/SquareContainer.hpp>
#include <gui/containers/WinGame.hpp>
#include <gui/containers/GameOver.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class GameScreenViewBase : public touchgfx::View<GameScreenPresenter>
{
public:
    GameScreenViewBase();
    virtual ~GameScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void NewGame()
    {
        // Override and implement this function in GameScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage background;
    touchgfx::ScalableImage Logo;
    touchgfx::ScalableImage title;
    touchgfx::ButtonWithIcon newGame;
    SquareContainer Square;
    WinGame winGame;
    GameOver gameOver;
    touchgfx::TextAreaWithOneWildcard BestScore;
    touchgfx::TextAreaWithOneWildcard Score;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<GameScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // GAMESCREENVIEWBASE_HPP
